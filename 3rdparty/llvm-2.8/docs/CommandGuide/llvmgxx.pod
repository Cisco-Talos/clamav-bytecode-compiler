=pod

=head1 NAME

llvm-g++ - LLVM C++ front-end

=head1 SYNOPSIS

B<llvm-g++> [I<options>] I<filename>

=head1 DESCRIPTION

The B<llvm-g++> command is the LLVM C++ front end.  It is a modified
version of g++ that compiles C++/ObjC++ programs into native code, 
LLVM bitcode or assembly language, depending upon the options.

By default, B<llvm-g++> compiles to native objects just like GCC does. If the
B<-emit-llvm> option is given then it will generate LLVM bitcode files instead.
If B<-S> (assembly) is also given, then it will generate LLVM assembly. 

Being derived from the GNU Compiler Collection, B<llvm-g++> has many
of g++'s features and accepts most of g++'s options.  It handles a
number of g++'s extensions to the C++ programming language.

=head1 OPTIONS

=over

=item B<--help>

Print a summary of command line options.

=item B<-S>

Do not generate an LLVM bitcode file.  Rather, compile the source
file into an LLVM assembly language file.

=item B<-c>

Do not generate a linked executable.  Rather, compile the source
file into an LLVM bitcode file.  This bitcode file can then be
linked with other bitcode files later on to generate a full LLVM
executable.

=item B<-o> I<filename>

Specify the output file to be I<filename>.

=item B<-I> I<directory>

Add a directory to the header file search path.  This option can be
repeated.

=item B<-L> I<directory>

Add I<directory> to the library search path.  This option can be
repeated.

=item B<-l>I<name>

Link in the library libI<name>.[bc | a | so].  This library should
be a bitcode library.

=item B<-emit-llvm>

Make the output be LLVM bitcode (or assembly) instead of native object (or
assembly).

=back

=head1 EXIT STATUS

If B<llvm-g++> succeeds, it will exit with 0.  Otherwise, if an error
occurs, it will exit with a non-zero value.

=head1 SEE ALSO

L<llvm-gcc|llvmgcc>

=head1 AUTHORS

Maintained by the LLVM Team (L<http://llvm.org>).

=cut

